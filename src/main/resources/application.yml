server:
  port: 8082


spring:
    redis:
        # 这是 cluster 架构的配置
        # database: 0
        # lettuce:
        #  pool:
        #    max-idle: 10
        #    max-wait: 500ms
        # cluster:
        #   timeout: 1000
        #   max-redirects: 3
        #   nodes: 10.82.30.61:6379,10.82.30.61:6380


        # Redis数据库索引（默认为0）
        database: 0
        # Redis服务器地址
        host: 10.82.30.61
        # Redis服务器连接端口
        port: 6379
        # Redis服务器连接密码（默认为空）
        password:
        # 连接池最大连接数（使用负值表示没有限制）
        # pool:


          # max-active: 200
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
          # max-wait: -1
        # 连接池中的最大空闲连接
          # max-idle: 10
        # 连接池中的最小空闲连接
          # min-idle: 0
        # 连接超时时间（毫秒）
        timeout: 1000ms
        maxTotal: 50
        soTimeout: 500
        connectionTimeout: 500
        # 保留的最小空闲连接数
        minIdle: 10
        # 保留的最大空闲连接数（建议：此值=maxActive）
        maxIdle: 50
        # 获取实例 最大等待时间（毫秒），超过等待时间则抛出JedisConnectionException
        maxWaitMillis: 500
        # 在获取连接的时候检查有效性
        testOnBorrow: false
        # 在将实例返还给pool之前，是否进行有效性校验
        testOnReturn: false
        # 是否对空闲对象进行扫描（boolean）（需要timeBetweenEvictionRunsMillis > 0）
        testWhileIdle: true
        # 每次扫描，逐出空闲线程的最大数量（可以理解为分批逐出，这是一批的数量）
        numTestsPerEvictionRun: 30
        # 空闲连接，停留的最短时间（毫秒）：5分钟
        minEvictableIdleTimeMillis: 300000
        # 空闲扫描时间间隔（毫秒）：1分钟
        timeBetweenEvictionRunsMillis: 60000

    datasource:
        name: intecsec_springboot
        type: com.alibaba.druid.pool.DruidDataSource
        #druid相关配置
        druid:
          #监控统计拦截的filters
          filters: stat
          driver-class-name: com.mysql.jdbc.Driver
          #基本属性
          url: jdbc:mysql://localhost:3306/intecsec_springboot?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false
          username: root
          password: 123456
          #配置初始化大小/最小/最大
          initial-size: 1
          min-idle: 1
          max-active: 20
          #获取连接等待超时时间
          max-wait: 60000
          #间隔多久进行一次检测，检测需要关闭的空闲连接
          time-between-eviction-runs-millis: 60000
          #一个连接在池中最小生存的时间
          min-evictable-idle-time-millis: 300000
          validation-query: SELECT 'x'
          test-while-idle: true
          test-on-borrow: false
          test-on-return: false
          #打开PSCache，并指定每个连接上PSCache的大小。oracle设为true，mysql设为false。分库分表较多推荐设置为false
          pool-prepared-statements: false
          max-pool-prepared-statement-per-connection-size: 20


## 该配置节点为独立的节点，有很多同学容易将这个配置放在spring的节点下，导致配置无法被识别
mybatis:
  # 注意：一定要对应mapper映射xml文件的所在路径
  mapper-locations: classpath:mapper/*.xml
  # 注意：对应实体类的路径
  type-aliases-package: com.intesec.core.mapper


# page helper
pagehelper:
    helperDialect: mysql
    reasonable: true
    supportMethodsArguments: true
    params: count=countSql
    returnPageInfo: check


# RocketMQ配置
apache:
  rocketmq:
    # 消费者的组名
    consumer:
      pushConsumer: PushConsumer
    # 生产者的组名
    producer:
      producerGroup: Producer
    # NameServer地址
    namesrvAddr: localhost:9876
    # 启动的时候是否消费历史记录
    enableHisConsumer: false
    # 启动顺序消费
    enableOrderConsumer: false

debug: false
logging:
  level:
    root: info
    org:
      springframework: error
      mybatis: error
  # path: /data/logs/springboot
  # file: root.log
  config: classpath:logback-spring.xml

